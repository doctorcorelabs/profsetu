{
  "version": 3,
  "sources": ["file:///E:/Website/setiya-utama-vision-main/netlify/functions/rss-scheduler.js"],
  "sourceRoot": "C:/Users/ACER/AppData/Local/Temp/tmp-17588-DUIAsIEknELH",
  "sourcesContent": ["// Scheduled function untuk menjalankan RSS processor 2x sehari\r\n// Function ini akan dipanggil oleh Netlify Scheduled Functions setiap 12 jam\r\n\r\nexports.handler = async (event, context) => {\r\n  try {\r\n    console.log('RSS Scheduler triggered at:', new Date().toISOString());\r\n    \r\n    // Panggil RSS processor function\r\n    const response = await fetch(`${process.env.URL}/.netlify/functions/rss-processor`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n\r\n    const result = await response.json();\r\n\r\n    if (response.ok) {\r\n      console.log('RSS processing completed successfully:', result);\r\n      return {\r\n        statusCode: 200,\r\n        body: JSON.stringify({\r\n          message: 'RSS scheduler executed successfully',\r\n          result: result,\r\n          timestamp: new Date().toISOString()\r\n        })\r\n      };\r\n    } else {\r\n      console.error('RSS processing failed:', result);\r\n      return {\r\n        statusCode: 500,\r\n        body: JSON.stringify({\r\n          message: 'RSS scheduler execution failed',\r\n          error: result,\r\n          timestamp: new Date().toISOString()\r\n        })\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error('RSS scheduler error:', error);\r\n    return {\r\n      statusCode: 500,\r\n      body: JSON.stringify({\r\n        message: 'RSS scheduler execution failed',\r\n        error: error.message,\r\n        timestamp: new Date().toISOString()\r\n      })\r\n    };\r\n  }\r\n};\r\n"],
  "mappings": ";AAGA,QAAQ,UAAU,OAAO,OAAO,YAAY;AAC1C,MAAI;AACF,YAAQ,IAAI,gCAA+B,oBAAI,KAAK,GAAE,YAAY,CAAC;AAGnE,UAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,IAAI,GAAG,qCAAqC;AAAA,MAClF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,IACF,CAAC;AAED,UAAM,SAAS,MAAM,SAAS,KAAK;AAEnC,QAAI,SAAS,IAAI;AACf,cAAQ,IAAI,0CAA0C,MAAM;AAC5D,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU;AAAA,UACnB,SAAS;AAAA,UACT;AAAA,UACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QACpC,CAAC;AAAA,MACH;AAAA,IACF,OAAO;AACL,cAAQ,MAAM,0BAA0B,MAAM;AAC9C,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU;AAAA,UACnB,SAAS;AAAA,UACT,OAAO;AAAA,UACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QACpC,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,wBAAwB,KAAK;AAC3C,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU;AAAA,QACnB,SAAS;AAAA,QACT,OAAO,MAAM;AAAA,QACb,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MACpC,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": []
}
